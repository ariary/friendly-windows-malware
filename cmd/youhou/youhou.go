package main

import (
	"fmt"
	"log"
	"os"

	"github.com/ariary/friendly-windows-malware/pkg/desktop"
	"github.com/ariary/friendly-windows-malware/pkg/fruity"
	"github.com/fsnotify/fsnotify"
)

var Fruit string

func main() {
	// create file
	path, err := desktop.WriteFileOnDesktop()
	if err != nil {
		fmt.Println("Unable to write file:", err)
	}

	// watch event
	watcher, err := fsnotify.NewWatcher()
	if err != nil {
		log.Fatal(err)
	}
	defer watcher.Close()

	done := make(chan bool)
	go func() {
		for {
			select {
			case _, ok := <-watcher.Events:
				//case event, ok := <-watcher.Events:
				if !ok {
					return
				}
				if err := fruity.ChangeWallpaper(Fruit); err != nil {
					fmt.Println("Failed to change wallpaper")
					os.Exit(92)
				}
				// log.Println("event:", event)
				// if event.Op&fsnotify.Write == fsnotify.Write {
				// 	log.Println("modified file:", event.Name)
				// }
			case err, ok := <-watcher.Errors:
				if !ok {
					return
				}
				log.Println("error:", err)
			}
		}
	}()

	err = watcher.Add(path)
	if err != nil {
		log.Fatal(err)
	}
	<-done
}
